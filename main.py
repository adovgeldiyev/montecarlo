# Azat Dovgeldiyev
#03/05/2020
#I have not given or received any unauthorized assistance on this assignment.

import Ellipse
from testAndCompute import getBox,simulate,simulateOnce,doSimulation


def main():
    PointD()
    check_getSemiMajor()
    check_getSemiMinor()
    check_getArea()
    check_getCircum()
    check_getBoundary()
    check_pointInside()
    check_getBox()
    check_simulateOnce()
    check_simulate()
    check_doSimulation()
    
def PointD():
    help(Ellipse.ClsPoint.distance_bet_points)
    print("*****Checking whether given distances are correct or not.*****")
    p1=Ellipse.ClsPoint(2,3)
    p2=Ellipse.ClsPoint(4,9)
    p3=Ellipse.ClsPoint(-3,-2)
    p4=Ellipse.ClsPoint(0,0)
    p5=Ellipse.ClsPoint(-1,8)
    p6=Ellipse.ClsPoint(8,-2)
    print("Given points: {},{},{},\n\t      {},{},{}".format(p1,p2,p3,p4,p5,p6))
    d=p1.distance_bet_points(p2)
    print("Distance between {} and {}: {}".format(p1,p2,d))
    print("")
    d=p3.distance_bet_points(p4)
    print("Distance between {} and {}: {}".format(p3,p4,d))
    print("")
    d=p5.distance_bet_points(p6)
    print("Distance between {} and {}: {}".format(p5,p6,d))
    print("")

def check_getSemiMajor():
    help(Ellipse.ClsEllipse.get_SemiMajor)
    print("*****Checking whether given major axis length correct or not.*****")
    e1=Ellipse.ClsEllipse(1,1,2,2,5)
    e2=Ellipse.ClsEllipse(2,-1,1,5,8)
    e3=Ellipse.ClsEllipse(4,3,2,0,7)
    e4=Ellipse.ClsEllipse(1,2,3,4,10)
    print("Given points: {},\n\t      {},\n\t      {},\n\t      {}".\
          format(e1,e2,e3,e4))
    smajor=e1.get_SemiMajor()
    print("The major axis is {}".format(smajor))
    print("")
    smajor=e2.get_SemiMajor()
    print("The major axis is {}".format(smajor))
    print("")
    smajor=e3.get_SemiMajor()
    print("The major axis is {}".format(smajor))
    print("")
    smajor=e4.get_SemiMajor()
    print("The major axis is {}".format(smajor))
    print("")

def check_getSemiMinor():
    help(Ellipse.ClsEllipse.get_SemiMinor)
    print("*****Checking whether given minor axis length correct or not.*****")
    e1=Ellipse.ClsEllipse(1,1,2,2,5)
    e2=Ellipse.ClsEllipse(2,-1,1,5,8)
    e3=Ellipse.ClsEllipse(4,3,2,0,7)
    e4=Ellipse.ClsEllipse(1,2,3,4,10)
    print("Given points: {},\n\t      {},\n\t      {},\n\t      {}".\
          format(e1,e2,e3,e4))
    sminor=e1.get_SemiMinor()
    print("The minor axis is {}".format(sminor))
    print("")
    sminor=e2.get_SemiMinor()
    print("The minor axis is {}".format(sminor))
    print("")
    sminor=e3.get_SemiMinor()
    print("The minor axis is {}".format(sminor))
    print("")
    sminor=e4.get_SemiMinor()
    print("The minor axis is {}".format(sminor))
    print("")

def check_getArea():
    help(Ellipse.ClsEllipse.get_Area)
    print("*****Calculating area of Ellipse*****")
    e1=Ellipse.ClsEllipse(1,1,2,2,5)
    e2=Ellipse.ClsEllipse(2,-1,1,5,8)
    e3=Ellipse.ClsEllipse(4,3,2,0,7)
    e4=Ellipse.ClsEllipse(1,2,3,4,10)
    print("Given points: {},\n\t      {},\n\t      {},\n\t      {}".\
          format(e1,e2,e3,e4))
    area1=e1.get_Area()
    print("The area of given ellipse is: {}".format(area1))
    print("")
    area2=e2.get_Area()
    print("The area of given ellipse is: {}".format(area2))
    print("")
    area3=e3.get_Area()
    print("The area of given ellipse is: {}".format(area3))
    print("")
    area4=e4.get_Area()
    print("The area of given ellipse is: {}".format(area4))
    print("")
    print("-------------------------------------")

def check_getCircum():
    help(Ellipse.ClsEllipse.get_Circum)
    print("*****Calculating circumference of Ellipse*****")
    e1=Ellipse.ClsEllipse(1,1,2,2,5)
    e2=Ellipse.ClsEllipse(2,-1,1,5,8)
    e3=Ellipse.ClsEllipse(4,3,2,0,7)
    e4=Ellipse.ClsEllipse(1,2,3,4,10)
    print("Given points: {},\n\t      {},\n\t      {},\n\t      {}".\
          format(e1,e2,e3,e4))
    circum1=e1.get_Circum()
    print("The circumference of given Ellipse is: {}".format(circum1))
    print("")
    circum2=e2.get_Circum()
    print("The circumference of given Ellipse is: {}".format(circum2))
    print("")
    circum3=e3.get_Circum()
    print("The circumference of given Ellipse is: {}".format(circum3))
    print("")
    circum4=e4.get_Circum()
    print("The circumference of given Ellipse is: {}".format(circum4))
    print("")
    print("-------------------------------------")

def check_getBoundary():
    help(Ellipse.ClsEllipse.checkForBoundary)
    print("*****Check if given points are on edge or not*****")
    e1=Ellipse.ClsEllipse(4,0,4,0,8)
    p1=Ellipse.ClsPoint(4,4)
    p2=Ellipse.ClsPoint(8,0)
    p3=Ellipse.ClsPoint(0,1)
    p4=Ellipse.ClsPoint(3,4)
    print("Given ellipse is: {}, \nAnd points: {},{},{},{}".format(e1,p1,p2,p3,p4))
    cb1=e1.checkForBoundary(4,4)
    print("The result is: {}".format(cb1))
    print("")
    cb2=e1.checkForBoundary(8,0)
    print("The result is: {}".format(cb2))
    print("")
    cb3=e1.checkForBoundary(0,1)
    print("The result is: {}".format(cb3))
    print("")
    cb4=e1.checkForBoundary(3,4)
    print("The result is: {}".format(cb4))
    print("")
    print("-------------------------------------")

def check_pointInside():
    help(Ellipse.ClsEllipse.isPointInside)
    print("*****Test if given points are inside*****")
    e1=Ellipse.ClsEllipse(4,0,4,0,8)
    p1=Ellipse.ClsPoint(2,1)
    p2=Ellipse.ClsPoint(4,0)
    p3=Ellipse.ClsPoint(6,-8)
    p4=Ellipse.ClsPoint(0,12)
    print("Given ellipse is: {},\nAnd points: {},{},{},{}".format(e1,p1,p2,p3,p4))
    cpi1=e1.isPointInside(p1)
    print("The result is: {},".format(cpi1))
    print("")
    cpi2=e1.isPointInside(p2)
    print("The result is: {}".format(cpi2))
    print("")
    cpi3=e1.isPointInside(p3)
    print("The result is: {}".format(cpi3))
    print("")
    cpi4=e1.isPointInside(p4)
    print("The result is: {}".format(cpi4))
    print("")
    print("-------------------------------------")

def check_getBox():
    help(getBox)
    print("*****Check box if surrounds ellipses*****")
    e1=Ellipse.ClsEllipse(1,1,2,2,5)
    e2=Ellipse.ClsEllipse(2,-1,1,5,8)
    print("Given ellipses are: {},\n\t\t     {}".format(e1,e2))
    x1, y1, x2, y2, x3, y3, x4, y4 = getBox(e1,e2)
    print("Results are: {}, {}, {}, {}, {}, {}, {}, {}".format(x1, y1, x2, y2, x3, y3, x4, y4))
    print("")
    print("-------------------------------------")

def check_simulateOnce():
    help(simulateOnce)
    print("*****Check for points if they lie inside ellipses*****")
    e1=Ellipse.ClsEllipse(1,1,2,2,5)
    e2=Ellipse.ClsEllipse(2,-1,1,5,8)
    p1=Ellipse.ClsPoint(1,0)
    p2=Ellipse.ClsPoint(2,3)
    sOnce1=simulateOnce(e1,e2,p1)
    print("First Result is: {}".format(sOnce1))
    sOnce2=simulateOnce(e1,e2,p2)
    print("Second Result is: {}".format(sOnce2))
    print("Checking for 1st point: {}, Checking for 2nd point: {}".format\
          (sOnce1,sOnce2))
    print("")
    e3=Ellipse.ClsEllipse(-2,0,-2,1,6)
    e4=Ellipse.ClsEllipse(0,-2,3,1,5)
    p3=Ellipse.ClsPoint(-2,2)
    p4=Ellipse.ClsPoint(2,-1)
    sOnce3=simulateOnce(e3,e4,p3)
    print("Third result is: {}".format(sOnce3))
    sOnce4=simulateOnce(e3,e4,p4)
    print("Fourth result is: {}".format(sOnce4))
    print("Checking for 3rd point: {}, Checking for 4th point: {}".format\
          (sOnce3,sOnce4))
    print("")
    e5=Ellipse.ClsEllipse(1,2,0,4,14)
    e6=Ellipse.ClsEllipse(1,0,4,2,20)
    p5=Ellipse.ClsPoint(3,3)
    p6=Ellipse.ClsPoint(1,1)
    sOnce5=simulateOnce(e5,e6,p5)
    print("Fifth result is: {}".format(sOnce5))
    sOnce6=simulateOnce(e5,e6,p6)
    print("Sixth result is: {}".format(sOnce6))
    print("Given First and Second, fifth and sixth points lie inside the ellipse.")
    print("-------------------------------------")
    print("")
    
def check_simulate():
    help(simulate)
    print("*****Creating random points and simulates in both ellipses*****")
    print("*****Calculating 8000 times, result should be less than one*****")
    e1=Ellipse.ClsEllipse(1,2,1,0,6)
    e2=Ellipse.ClsEllipse(-1,0,3,2,8)
    x1, y1, x2, y2, x3, y3, x4, y4 = getBox(e1,e2)
    output1=simulate(e1,e2,x1, y1, x2, y2, x3, y3, x4, y4)
    print("Given numbers: {}, {}".format(e1,e2))
    print("Given coordinates: {}, {}, {}, {}, {}, {}, {}, {}".format\
          (x1, y1, x2, y2, x3, y3, x4, y4))
    print("First Output: {}".format(output1))
    print("")
    e3=Ellipse.ClsEllipse(-2,0,-2,1,6)
    e4=Ellipse.ClsEllipse(0,-2,3,1,5)
    x1, y1, x2, y2, x3, y3, x4, y4 = getBox(e3,e4)
    output2=simulate(e3,e4,x1, y1, x2, y2, x3, y3, x4, y4)
    print("Given numbers: {}, {}".format(e3,e4))
    print("Given coordinates: {}, {}, {}, {}, {}, {}, {}, {}".format\
          (x1, y1, x2, y2, x3, y3, x4, y4))
    print("Second Output: {}".format(output2))
    print("")
    e5=Ellipse.ClsEllipse(0,1,0,1,5)
    e6=Ellipse.ClsEllipse(0,2,0,2,6)
    x1, y1, x2, y2, x3, y3, x4, y4 = getBox(e5,e6)
    output3=simulate(e5,e6,x1, y1, x2, y2, x3, y3, x4, y4)
    print("Given numbers: {}, {}".format(e5,e6))
    print("Given coordinates: {}, {}, {}, {}, {}, {}, {}, {}".format\
          (x1, y1, x2, y2, x3, y3, x4, y4))
    print("Vertical overlap")
    print("Third Output: {}".format(output3))
    print("")
    e7=Ellipse.ClsEllipse(1,0,1,0,5)
    #e8=Ellipse.ClsEllipse(-1,-1,-3,0,1)this will raise a valueError
    e8=Ellipse.ClsEllipse(2,0,2,0,6)
    x1, y1, x2, y2, x3, y3, x4, y4 = getBox(e7,e8)
    output4=simulate(e7,e8,x1, y1, x2, y2, x3, y3, x4, y4)
    print("Given numbers: {}, {}".format(e7,e8))
    print("Given coordinates: {}, {}, {}, {}, {}, {}, {}, {}".format\
          (x1, y1, x2, y2, x3, y3, x4, y4))
    print("horizontal overlap")
    print("Fourth Output: {}".format(output4))
    print("-------------------------------------")
    print("")

def check_doSimulation():
    help(doSimulation)
    print("*****Calculating area of box*****")
    e1=Ellipse.ClsEllipse(1,1,2,2,5)
    e2=Ellipse.ClsEllipse(2,-1,4,4,25)
    x1, y1, x2, y2, x3, y3, x4, y4 = getBox(e1,e2)
    output1=doSimulation(e1,e2,x1, y1, x2, y2, x3, y3, x4, y4)
    print("Given coordinates: {}, {}, {}, {}, {}, {}, {}, {}".format\
          (x1, y1, x2, y2, x3, y3, x4, y4))
    print("First result is: {}".format(output1))
    print("")
    
    e3=Ellipse.ClsEllipse(-1,0,0,0,1)
    e4=Ellipse.ClsEllipse(0,0,0,0,0)
    x1, y1, x2, y2, x3, y3, x4, y4 = getBox(e3,e4)
    output2=doSimulation(e3,e4,x1, y1, x2, y2, x3, y3, x4, y4)
    print("Given coordinates: {}, {}, {}, {}, {}, {}, {}, {}".format\
          (x1, y1, x2, y2, x3, y3, x4, y4))
    print("Second result is: {}".format(output2))
    print("No Overlapping")
    print("")
    
    e5=Ellipse.ClsEllipse(0,1,0,1,5)
    e6=Ellipse.ClsEllipse(0,2,0,2,6)
    x1, y1, x2, y2, x3, y3, x4, y4 = getBox(e5,e6)
    output3=doSimulation(e5,e6,x1, y1, x2, y2, x3, y3, x4, y4)
    print("Given coordinates: {}, {}, {}, {}, {}, {}, {}, {}".format\
          (x1, y1, x2, y2, x3, y3, x4, y4))
    print("Vertical overlap")
    print("Third result is: {}".format(output3))
    print("")
    
    e7=Ellipse.ClsEllipse(1,0,1,0,5)
    e8=Ellipse.ClsEllipse(2,0,2,0,6)
    x1, y1, x2, y2, x3, y3, x4, y4 = getBox(e7,e8)
    output4=doSimulation(e7,e8,x1, y1, x2, y2, x3, y3, x4, y4)
    print("Given coordinates: {}, {}, {}, {}, {}, {}, {}, {}".format\
          (x1, y1, x2, y2, x3, y3, x4, y4))
    print("Horizontal overlap")
    print("Fourth result is: {}".format(output4))
    print("")
    print("Result shows that Horizontal and Vertical Overlapping almost have the same result.")
    print("")
    print("-----------------------------------------------------------------------------------")
    print("")
    print("Successfully completed Monte Carlo Simulation, estimating \narea of ellipse, area of overlap, \nsimulating given points both horizontally and vertically,\nchecking\
for points outside of ellipse drawing box, or inside of ellipse.")

main()
